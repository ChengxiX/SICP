(load "p3.13.rkt")
(define (check li)
  (define (find p res) (if (null? res) #f (if (eq? p (car res)) #t (find p (cdr res)))))
  (define (rec li pairs)
    (if (find li pairs) #f (if (pair? li) (let ((pairs (cons li pairs))) (and (rec (car li) pairs) (rec (cdr li) pairs))) #t)))
  (rec li '()))
(check '(1 2 3))
(check '(1 2 (4 3) 41))
(check b)
(check z)